{"version":3,"sources":["components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/PersonName/PersonName.tsx","components/PersonRow/PersonRow.tsx","utils/constants.tsx","components/THeader/THeader.tsx","components/PeopleTable/PeopleTable.tsx","utils/addFunctions.ts","components/NewPerson/UseFormComp.tsx","components/NewPerson/NewPerson.tsx","api.tsx","components/People/People.tsx","App.tsx","index.tsx"],"names":["Navigation","className","to","exact","activeClassName","HomePage","NotFoundPage","PersonName","human","slug","people","match","useRouteMatch","search","useLocation","useState","subject","setSubject","useEffect","find","individ","name","undefined","key","pathname","url","sex","PersonRow","person","index","motherId","motherName","fatherId","fatherName","born","died","THeaders","NameCheck","THeader","header","history","useHistory","location","searchParams","URLSearchParams","sortBy","get","sortOrder","type","onClick","sortType","set","push","toString","style","textTransform","src","alt","PeopleTable","React","memo","personId","map","classNames","highlighted","filterItems","arr","query","birthYear","filter","item","Number","checkYear","year","currentYear","Date","getFullYear","split","RegExp","test","sumbitForm","message","console","log","useForm","onAddPerson","form","mother","father","values","setValues","submit","errors","setErrors","disabledBornField","setDisabledField","disbledParentField","setdisabledParentField","isSubmitting","setIsSubmitting","applyQuery","useCallback","debounce","queryName","event","value","target","disbdFieldFlag","current","inputValue","validateOnChange","Object","keys","length","toLowerCase","some","checkPersonInList","handleChange","persist","handleSubmit","preventDefault","String","validateOnSubmit","NewPerson","women","useMemo","men","onSubmit","htmlFor","placeholder","required","onChange","disabled","id","checked","getPeople","fetch","then","response","json","People","setPeople","params","appliedQuery","setQuery","sortByColumn","sortByOrder","newQuery","delete","visibleList","nameFromQuery","includes","sortedList","sortByToLowerCase","sort","orderoToSort","a","b","localeCompare","callback","addPerson","bornYear","array","trim","v","join","createSlug","newPerson","newArray","path","App","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2edfbba3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Navigation.scss';\n\nexport const Navigation = () => (\n  <>\n    <nav className=\"navbar\">\n      <NavLink\n        to=\"/\"\n        exact\n        className=\"navbar__link\"\n        activeClassName=\"is-active\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        to=\"/people\"\n        className=\"navbar__link\"\n        activeClassName=\"is-active\"\n      >\n        People\n      </NavLink>\n    </nav>\n  </>\n);\n","import React from 'react';\n\nexport const HomePage = () => (\n  <section className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">\n        HomePage\n      </h1>\n    </div>\n  </section>\n);\n","import React from 'react';\n\nexport const NotFoundPage = () => (\n  <section className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">\n        Page not found\n      </h1>\n    </div>\n  </section>\n);\n","import React, { useEffect, useState } from 'react';\nimport { NavLink, useRouteMatch, useLocation } from 'react-router-dom';\n\nimport { Identity } from '../../utils/type';\nimport './PersonName.scss';\n\nexport const PersonName: React.FC<Identity> = ({ human, slug, people }) => {\n  const match = useRouteMatch();\n  const { search } = useLocation();\n  const [subject, setSubject] = useState<any>('');\n\n  useEffect(() => {\n    setSubject(people.find(individ => individ.name === human) || undefined);\n  }, [slug]);\n\n  return (\n    <td>\n      <NavLink\n        key={slug}\n        to={{\n          pathname: `${match.url}/${slug}`,\n          search,\n        }}\n      >\n        {subject !== undefined\n          ? (\n            <span className={`${subject.sex === 'm' ? 'blue' : 'red'}`}>\n              {human}\n            </span>\n          )\n          : (\n            <span className=\"black\">\n              {human}\n            </span>\n          )}\n      </NavLink>\n    </td>\n  );\n};\n","import React from 'react';\nimport { PersonName } from '../PersonName';\n\nimport { PersonData, Person } from '../../utils/type';\nimport './PersonRow.scss';\n\nexport const PersonRow: React.FC <PersonData<Person, number, string>> = ({\n  person, index, people,\n}) => {\n  const motherId: Person| undefined = people.find(individ => person.motherName === individ.name);\n  const fatherId: Person| undefined = people.find(individ => person.fatherName === individ.name);\n\n  return (\n    <>\n      <td>{index}</td>\n      <PersonName\n        human={person.name}\n        slug={person.slug}\n        people={people}\n      />\n      <td>\n        {person.sex}\n      </td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      {motherId !== undefined ? (\n        <PersonName\n          human={person.motherName}\n          slug={motherId.slug}\n          people={people}\n        />\n      ) : (\n        <td>\n          <strong>{person.motherName}</strong>\n        </td>\n      )}\n      {fatherId !== undefined ? (\n        <PersonName\n          human={person.fatherName}\n          slug={fatherId.slug}\n          people={people}\n        />\n      ) : (\n        <td>\n          <strong>{person.fatherName}</strong>\n        </td>\n      )}\n    </>\n  );\n};\n","import { Header } from './type';\n\nexport const THeaders: Header = ['Name', 'Sex', 'Born', 'Died'];\nexport const ASC = 'asc';\nexport const DESC = 'desc';\nexport const Name = 'Name';\nexport const Sex = 'Sex';\nexport const Born = 'Born';\nexport const Died = 'Died';\nexport const NameCheck = /^[a-z .'-]+$/i;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nimport { ASC, DESC } from '../../utils/constants';\nimport { HeaderProp } from '../../utils/type';\n\nexport const THeader: React.FC<HeaderProp> = ({ header }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const handleSortByChange = (sortType: string): void => {\n    if (sortOrder === DESC || sortBy !== sortType) {\n      searchParams.set('sortBy', `${sortType}`);\n      searchParams.set('sortOrder', ASC);\n    } else {\n      searchParams.set('sortOrder', DESC);\n    }\n\n    history.push({ search: searchParams.toString() });\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={() => {\n          handleSortByChange(header);\n        }}\n        style={{ textTransform: 'capitalize' }}\n      >\n        {header}\n        { header !== sortBy\n          ? (\n            <span>\n              <img src=\"images/sort_both.png\" alt=\"notSorted\" />\n            </span>\n          )\n          : (\n            <span>\n              *\n              { sortOrder === ASC\n                ? (<img src=\"images/sort_asc.png\" alt=\"sortAsc\" />)\n                : (<img src=\"images/sort_desc.png\" alt=\"sortDesc\" />)}\n            </span>\n          )}\n      </button>\n    </>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { PersonRow } from '../PersonRow';\nimport { THeader } from '../THeader';\n\nimport { People, Person } from '../../utils/type';\nimport { THeaders } from '../../utils/constants';\nimport './PeopleTable.scss';\n\nexport const PeopleTable: React.FC<People<Person, string>> = React.memo(({ people, personId }) => {\n  return (\n    <section className=\"section\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Number</th>\n            {THeaders.map(header => (\n              <th key={header}>\n                <THeader header={header} />\n              </th>\n            ))}\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((person: Person, index: number) => (\n            <tr\n              key={person.slug}\n              className={classNames({ highlighted: personId === person.slug })}\n            >\n              <PersonRow\n                person={person}\n                index={index + 1}\n                personId={personId}\n                people={people}\n              />\n            </tr>\n          ))}\n        </tbody>\n        <tfoot>\n          <tr>\n            <th>Number</th>\n            <th>Name</th>\n            <th>Sex</th>\n            <th>Born</th>\n            <th>Died</th>\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </tfoot>\n      </table>\n    </section>\n  );\n});\n","/* eslint-disable no-console */\n/* eslint-disable func-names */\nimport {\n  Person, FieldError,\n  ValidateOnSubmit, Sumbit,\n  ValidatOnChange, CheckPerson,\n  CreateSlug,\n} from './type';\nimport { NameCheck } from './constants';\n\n// eslint-disable-next-line consistent-return\nexport const callback = function (sortBy: string, orderoToSort: string): any {\n  switch (sortBy) {\n    case 'name': return (a: Person, b: Person) => {\n      return (orderoToSort === 'desc')\n        ? b[sortBy].localeCompare(a[sortBy])\n        : a[sortBy].localeCompare(b[sortBy]);\n    };\n\n    case 'sex': return (a: Person, b: Person) => {\n      return (orderoToSort === 'desc')\n        ? b[sortBy].localeCompare(a[sortBy])\n        : a[sortBy].localeCompare(b[sortBy]);\n    };\n\n    case 'born': return (a: Person, b: Person): number => {\n      return (orderoToSort === 'desc')\n        ? (Number(b[sortBy]) - Number(a[sortBy]))\n        : (Number(a[sortBy]) - Number(b[sortBy]));\n    };\n\n    case 'died': return (a: Person, b: Person): number => {\n      return (orderoToSort === 'desc')\n        ? (Number(b[sortBy]) - Number(a[sortBy]))\n        : (Number(a[sortBy]) - Number(b[sortBy]));\n    };\n\n    default: {\n      break;\n    }\n  }\n};\n\nexport const filterItems = function (arr: Person[], query: string, birthYear: string | number) {\n  if (!birthYear) {\n    return arr.filter(item => item.sex === query);\n  }\n\n  return arr.filter(item => item.sex === query\n    && Number(birthYear) - item.born >= 15\n    && item.died - Number(birthYear) >= 0);\n};\n\nexport const checkYear = function (year: string): boolean {\n  if (!year) {\n    return false;\n  }\n\n  const currentYear = new Date().getFullYear().toString().split('');\n  const yearReg = new RegExp(`^(1[4-9][0-9][0-9]|200[0-9]|[0-${currentYear[0]}][0-${currentYear[1]}][0-${currentYear[2]}][0-${currentYear[3]}])$`);\n\n  return yearReg.test(year);\n};\n\nconst checkAge = (born: number, died: number): boolean => {\n  const ageDiff = !!(((died - born) >= 0 && (died - born) < 150));\n\n  return ageDiff;\n};\n\nexport const checkPersonInList: CheckPerson = (form, people) => {\n  const name = form.name.toLowerCase();\n  const birthYear = Number(form.born);\n\n  return people.some(person => person.name.toLowerCase() === name && person.born === birthYear);\n};\n\nexport const validateOnSubmit: ValidateOnSubmit = (values) => {\n  const errors: FieldError = {};\n\n  if (!values.name) {\n    errors.name = 'Name is required';\n  } else if (!NameCheck.test(values.name)) {\n    errors.name = 'Name is invalid';\n  }\n\n  if (!values.born || values.born === '0') {\n    errors.born = 'Enter Birth Year';\n  } else if ((!checkYear(String(values.born)))) {\n    errors.born = 'Birth Year is not in range! Valid range is 1400-present';\n  }\n\n  if (!values.died || values.born === '0') {\n    errors.died = 'Enter Death Year';\n  } else if ((!checkYear(String(values.died)))) {\n    errors.died = 'Birth Year is not in range! Valid range is 1400-present';\n  }\n\n  if (values.born && values.died) {\n    const age = checkAge(Number(values.born), Number(values.died));\n\n    if (!age) {\n      errors.died = 'Enter correct Birth/Death Year!';\n    }\n  }\n\n  return errors;\n};\n\nexport const validateOnChange: ValidatOnChange = (event) => {\n  let inputValue = '';\n  const { name, value } = event.target;\n\n  switch (name) {\n    case 'name': {\n      if (!value) {\n        inputValue = 'Name is required';\n      } else if (!NameCheck.test(value)) {\n        inputValue = 'Name is invalid';\n      }\n\n      break;\n    }\n\n    case 'born': {\n      if (!value) {\n        inputValue = 'Enter Birth Year';\n      } else {\n        inputValue = (!checkYear(value))\n          ? 'Birth Year is not in range! Valid range is 1400-present' : '';\n      }\n\n      break;\n    }\n\n    case 'died': {\n      if (!value) {\n        inputValue = 'Enter Death Year';\n      } else {\n        inputValue = (!checkYear(value)) ? 'Death Year is not in range! Valid range  is 1400-present' : '';\n      }\n\n      break;\n    }\n\n    default: {\n      break;\n    }\n  }\n\n  return inputValue;\n};\n\nexport const sumbitForm: Sumbit = (message) => {\n  console.log(message);\n};\n\nexport const createSlug: CreateSlug = (name, bornYear) => {\n  const array = name.trim().split(' ');\n\n  array.push(bornYear);\n  const newName = array.map(v => v.toLowerCase()).join('-');\n\n  return newName;\n};\n","import { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport {\n  FormField, FieldError,\n  EventInput,\n  EventForm,\n  AddPerson, Person,\n} from '../../utils/type';\n\nimport {\n  sumbitForm, validateOnSubmit,\n  validateOnChange, checkPersonInList,\n} from '../../utils/addFunctions';\n\nconst useForm = (\n  onAddPerson: AddPerson, people: Person [],\n) => {\n  const form: FormField = {\n    name: '',\n    sex: 'm',\n    died: '0',\n    born: '0',\n    mother: '',\n    father: '',\n  };\n  const err: FieldError = {\n    name: '',\n    sex: '',\n    died: '',\n    born: '',\n    submit: '',\n  };\n  const [values, setValues] = useState(form);\n  const [errors, setErrors] = useState(err);\n  const [disabledBornField, setDisabledField] = useState(false);\n  const [disbledParentField, setdisabledParentField] = useState(true);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const match = useRouteMatch();\n\n  const applyQuery = useCallback(\n    debounce((queryName: string, event: EventInput) => {\n      const { value } = event.target;\n\n      if (queryName === 'born') {\n        const disbdFieldFlag = (value === '');\n\n        setDisabledField(disbdFieldFlag);\n        setdisabledParentField(disbdFieldFlag);\n      }\n\n      setErrors(current => ({ ...current, [queryName]: validateOnChange(event) }));\n    }, 500), [],\n  );\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      if (checkPersonInList(values, people)) {\n        sumbitForm('Person exists');\n        setErrors(current => {\n          return { ...current, submit: 'Person exists' };\n        });\n\n        return;\n      }\n\n      onAddPerson(values);\n      sumbitForm('Person added');\n      history.push({\n        pathname: `${match.url}`,\n        search: searchParams.toString(),\n      });\n      setValues(form);\n    }\n  }, [errors]);\n\n  const handleSubmit = (event: EventForm) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    setErrors(validateOnSubmit(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = (event: EventInput) => {\n    event.persist();\n    const { name, value } = event.target;\n\n    if (errors[name]) {\n      setErrors(current => {\n        return { ...current, [name]: '' };\n      });\n    }\n\n    setValues(current => ({ ...current, [name]: value }));\n    applyQuery(name, event);\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    disabledBornField,\n    disbledParentField,\n  };\n};\n\nexport default useForm;\n","import React, { useMemo } from 'react';\nimport useForm from './UseFormComp';\nimport './NewPerson.scss';\n\nimport { PeoplefromComp, Person, AddPerson } from '../../utils/type';\nimport { filterItems } from '../../utils/addFunctions';\n\nexport const NewPerson: React.FC<PeoplefromComp<Person, AddPerson>> = React.memo(\n  ({ people, onAddPerson }) => {\n    const {\n      values,\n      errors,\n      disabledBornField,\n      disbledParentField,\n      handleChange,\n      handleSubmit,\n    } = useForm(onAddPerson, people);\n\n    const women = useMemo(() => {\n      return filterItems(people, 'f', values.born);\n    }, [values.born]);\n\n    const men = useMemo(() => {\n      return filterItems(people, 'm', values.born);\n    }, [values.born]);\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <label htmlFor=\"name\">\n          Name:\n          <input\n            name=\"name\"\n            value={values.name || ''}\n            type=\"text\"\n            placeholder=\"Name\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        {errors.name && (\n          <p className=\"error error__is-error\">\n            {errors.name}\n          </p>\n        )}\n        <label htmlFor=\"mother\">\n          Mother:\n          <select\n            value={values.mother}\n            name=\"mother\"\n            onChange={handleChange}\n            disabled={disbledParentField}\n          >\n            <option value=\"\">None</option>\n            {women.map(({ name }) => (\n              <option\n                key={name + new Date()}\n                value={name}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"father\">\n          Father:\n          <select\n            value={values.father}\n            name=\"father\"\n            onChange={handleChange}\n            disabled={disbledParentField}\n          >\n            <option value=\"\">None</option>\n            {men.map(({ name }) => (\n              <option\n                key={name + new Date()}\n                value={name}\n              >\n                {name}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"born\">\n          Born:\n          <input\n            name=\"born\"\n            value={values.born}\n            type=\"number\"\n            required\n            onChange={handleChange}\n          />\n        </label>\n        {errors.born && (\n          <p className=\"error error__is-error\">\n            {errors.born}\n          </p>\n        )}\n        <label htmlFor=\"died\">\n          Died:\n          <input\n            name=\"died\"\n            value={values.died}\n            type=\"number\"\n            required\n            disabled={disabledBornField}\n            onChange={handleChange}\n          />\n        </label>\n        {errors.died && (\n          <p className=\"error error__is-error\">\n            {errors.died}\n          </p>\n        )}\n        <label htmlFor=\"gender_m\">\n          Male\n          <input\n            type=\"radio\"\n            name=\"sex\"\n            id=\"gender_m\"\n            value=\"m\"\n            checked={values.sex === 'm'}\n            onChange={handleChange}\n          />\n        </label>\n        <label htmlFor=\"gender_f\">\n          Female\n          <input\n            type=\"radio\"\n            name=\"sex\"\n            id=\"gender_f\"\n            value=\"f\"\n            checked={values.sex === 'f'}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\">\n          Submit Form\n        </button>\n        {Object.keys(errors).length === 0 && !errors.submit\n        && (\n          <p className=\"error error__not-error\">\n            No errors, submit callback called!\n          </p>\n        )}\n        {errors.submit && (\n          <p className=\"error error__is-error\">\n            {errors.submit}\n          </p>\n        )}\n      </form>\n    );\n  },\n);\n","const API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst request = () => fetch(`${API_URL}`)\n  .then(response => response.json());\n\nexport const getPeople = () => request();\n","import React, {\n  useEffect, useState, useMemo, useCallback,\n} from 'react';\nimport {\n  useLocation, useRouteMatch,\n  useHistory, Link, Route,\n} from 'react-router-dom';\nimport debounce from 'lodash/debounce';\nimport { PeopleTable } from '../PeopleTable';\nimport { NewPerson } from '../NewPerson';\n\nimport { getPeople } from '../../api';\nimport { MatchParams, AddPerson, Person } from '../../utils/type';\nimport { callback, createSlug } from '../../utils/addFunctions';\nimport './People.scss';\n\nexport const People = () => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const [people, setPeople] = useState<any[]>([]);\n\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const match = useRouteMatch <MatchParams>('/people/:slug?');\n  const personId = match?.params?.slug || '0';\n  const appliedQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(appliedQuery);\n  const sortByColumn = searchParams.get('sortBy') || '';\n  const sortByOrder = searchParams.get('sortOrder') || '';\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string | null) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push({ search: searchParams.toString() });\n    }, 500), [],\n  );\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    applyQuery(value);\n  };\n\n  useEffect(() => {\n    getPeople()\n      .then(setPeople);\n  }, []);\n\n  const visibleList = useMemo(() => {\n    if (!appliedQuery) {\n      return people;\n    }\n\n    const nameFromQuery = appliedQuery.toLowerCase();\n\n    return people.filter(({ name, motherName, fatherName }) => `${name} ${fatherName || ''} ${motherName || ''}`.toLowerCase().includes(nameFromQuery));\n  }, [people, appliedQuery]);\n\n  const sortedList = useMemo(() => {\n    if (!sortByColumn && !sortByOrder) {\n      return visibleList;\n    }\n\n    const sortByToLowerCase = sortByColumn.toLowerCase();\n\n    return [...visibleList].sort(callback(sortByToLowerCase, sortByOrder));\n  }, [sortByColumn, sortByOrder, visibleList]);\n\n  const addPerson: AddPerson = (form) => {\n    const slug = createSlug(form.name, String(form.born));\n    const newPerson: Person = {\n      name: form.name,\n      sex: form.sex,\n      born: Number(form.born),\n      died: Number(form.died),\n      fatherName: (form.father) ? form.father : null,\n      motherName: (form.mother) ? form.mother : null,\n      slug,\n    };\n\n    const newArray = [...people, newPerson];\n\n    setPeople(newArray);\n  };\n\n  return (\n    <>\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">\n            People Table\n          </h1>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div>\n          <label htmlFor=\"query\">\n            <input\n              value={query}\n              id=\"query\"\n              onChange={handleChangeInput}\n              className=\"input__search\"\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"Search\"\n            />\n          </label>\n        </div>\n        <div>\n          {location.pathname === '/people/new' ? (\n            <NewPerson\n              people={people}\n              onAddPerson={addPerson}\n            />\n          ) : (\n            <>\n              <Link to={{\n                pathname: '/people/new',\n                search: searchParams.toString(),\n              }}\n              >\n                <button\n                  type=\"button\"\n                  className=\"button__form \"\n                >\n                  Add Person\n                </button>\n              </Link>\n              <Route\n                path=\"/people/new\"\n                exact\n              >\n                <NewPerson\n                  people={people}\n                  onAddPerson={addPerson}\n                />\n              </Route>\n            </>\n          )}\n        </div>\n      </section>\n      {people.length && (\n        <PeopleTable\n          people={sortedList}\n          personId={personId}\n        />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { People } from './components/People';\n\nimport './App.scss';\n\nconst App = () => (\n  <div className=\"App\">\n    <Navigation />\n    <Switch>\n      <Route path=\"/people\" component={People} />\n      <Route path=\"/\" exact component={HomePage} />\n      <Redirect path=\"/home\" to=\"/\" />\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}